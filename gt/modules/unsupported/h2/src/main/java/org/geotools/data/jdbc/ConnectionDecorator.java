package org.geotools.data.jdbc;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Savepoint;
import java.sql.Statement;
import java.util.Map;

public class ConnectionDecorator implements Connection {

    protected Connection connection;

    public ConnectionDecorator( Connection connection ) {
        this.connection = connection;
    }
    public void clearWarnings() throws SQLException {
        connection.clearWarnings();
    }

    public void close() throws SQLException {
        connection.close();
    }

    public void commit() throws SQLException {
        connection.commit();
    }

    public Statement createStatement() throws SQLException {
        return connection.createStatement();
    }

    public Statement createStatement( int resultSetType, int resultSetConcurrency )
            throws SQLException {
        return connection.createStatement(resultSetType, resultSetConcurrency);
    }

    public Statement createStatement( int resultSetType, int resultSetConcurrency,
            int resultSetHoldability ) throws SQLException {
        return connection
                .createStatement(resultSetType, resultSetConcurrency, resultSetHoldability);
    }

    public boolean getAutoCommit() throws SQLException {
        return connection.getAutoCommit();
    }

    public String getCatalog() throws SQLException {
        return connection.getCatalog();
    }

    public int getHoldability() throws SQLException {
        return connection.getHoldability();
    }

    public DatabaseMetaData getMetaData() throws SQLException {
        return connection.getMetaData();
    }

    public int getTransactionIsolation() throws SQLException {
        return connection.getTransactionIsolation();
    }

    public Map getTypeMap() throws SQLException {
        return connection.getTypeMap();
    }

    public SQLWarning getWarnings() throws SQLException {
        return connection.getWarnings();
    }

    public boolean isClosed() throws SQLException {
        return connection.isClosed();
    }

    public boolean isReadOnly() throws SQLException {
        return connection.isReadOnly();
    }

    public String nativeSQL( String sql ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public CallableStatement prepareCall( String sql ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public CallableStatement prepareCall( String sql, int resultSetType, int resultSetConcurrency )
            throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public CallableStatement prepareCall( String sql, int resultSetType, int resultSetConcurrency,
            int resultSetHoldability ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public PreparedStatement prepareStatement( String sql ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public PreparedStatement prepareStatement( String sql, int autoGeneratedKeys )
            throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public PreparedStatement prepareStatement( String sql, int[] columnIndexes )
            throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public PreparedStatement prepareStatement( String sql, String[] columnNames )
            throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public PreparedStatement prepareStatement( String sql, int resultSetType,
            int resultSetConcurrency ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public PreparedStatement prepareStatement( String sql, int resultSetType,
            int resultSetConcurrency, int resultSetHoldability ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public void releaseSavepoint( Savepoint savepoint ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public void rollback() throws SQLException {
        // TODO Auto-generated method stub

    }

    public void rollback( Savepoint savepoint ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public void setAutoCommit( boolean autoCommit ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public void setCatalog( String catalog ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public void setHoldability( int holdability ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public void setReadOnly( boolean readOnly ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public Savepoint setSavepoint() throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public Savepoint setSavepoint( String name ) throws SQLException {
        // TODO Auto-generated method stub
        return null;
    }

    public void setTransactionIsolation( int level ) throws SQLException {
        // TODO Auto-generated method stub

    }

    public void setTypeMap( Map arg0 ) throws SQLException {
        // TODO Auto-generated method stub

    }

}
