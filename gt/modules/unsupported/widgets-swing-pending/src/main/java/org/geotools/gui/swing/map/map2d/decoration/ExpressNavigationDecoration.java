/*
 * ExpressNavigationDecoration.java
 *
 * Created on 21 janvier 2008, 19:26
 */
package org.geotools.gui.swing.map.map2d.decoration;

import javax.swing.ImageIcon;
import javax.swing.JComponent;

import org.geotools.gui.swing.icon.IconBundle;
import org.geotools.gui.swing.map.map2d.Map2D;

import com.vividsolutions.jts.geom.Coordinate;
import com.vividsolutions.jts.geom.Envelope;

/**
 *
 * @author  eclesia
 */
public class ExpressNavigationDecoration extends javax.swing.JPanel implements MapDecoration {

    private int ratio = 10;
    ImageIcon east = IconBundle.getResource().getIcon("CP32_actions_1rightarrow");
    ImageIcon north = IconBundle.getResource().getIcon("CP32_actions_1uparrow");
    ImageIcon south = IconBundle.getResource().getIcon("CP32_actions_1downarrow");
    ImageIcon west = IconBundle.getResource().getIcon("CP32_actions_1leftarrow");
    private Map2D map = null;

    /** Creates new form ExpressNavigationDecoration */
    public ExpressNavigationDecoration() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jSpinner1 = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setOpaque(false);

        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setOpaque(false);

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jButton2.setIcon(west);
        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(north);
        jButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setIcon(south);
        jButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setIcon(east);
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton3)
                            .add(jButton4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(424, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3))
                    .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(42, 42, 42)
                .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(119, 119, 119))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (map != null && map.getRenderingStrategy().getMapArea() != null) {
            Envelope oldEnv = map.getRenderingStrategy().getMapArea();
            double deplacement = oldEnv.getWidth() / ratio;
            Coordinate coord1 = new Coordinate(oldEnv.getMinX(), oldEnv.getMinY() + deplacement);
            Coordinate coord2 = new Coordinate(oldEnv.getMaxX(), oldEnv.getMaxY() + deplacement);
            Envelope newEnv = new Envelope(coord1, coord2);
            map.getRenderingStrategy().setMapArea(newEnv);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (map != null && map.getRenderingStrategy().getMapArea() != null) {
            Envelope oldEnv = map.getRenderingStrategy().getMapArea();
            double deplacement = oldEnv.getWidth() / ratio;
            Coordinate coord1 = new Coordinate(oldEnv.getMinX() + deplacement, oldEnv.getMinY());
            Coordinate coord2 = new Coordinate(oldEnv.getMaxX() + deplacement, oldEnv.getMaxY());
            Envelope newEnv = new Envelope(coord1, coord2);
            map.getRenderingStrategy().setMapArea(newEnv);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (map != null && map.getRenderingStrategy().getMapArea() != null) {
            Envelope oldEnv = map.getRenderingStrategy().getMapArea();
            double deplacement = oldEnv.getWidth() / ratio;
            Coordinate coord1 = new Coordinate(oldEnv.getMinX(), oldEnv.getMinY() - deplacement);
            Coordinate coord2 = new Coordinate(oldEnv.getMaxX(), oldEnv.getMaxY() - deplacement);
            Envelope newEnv = new Envelope(coord1, coord2);
            map.getRenderingStrategy().setMapArea(newEnv);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (map != null && map.getRenderingStrategy().getMapArea() != null) {
            Envelope oldEnv = map.getRenderingStrategy().getMapArea();
            double deplacement = oldEnv.getWidth() / ratio;
            Coordinate coord1 = new Coordinate(oldEnv.getMinX() - deplacement, oldEnv.getMinY());
            Coordinate coord2 = new Coordinate(oldEnv.getMaxX() - deplacement, oldEnv.getMaxY());
            Envelope newEnv = new Envelope(coord1, coord2);
            map.getRenderingStrategy().setMapArea(newEnv);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
         if (map != null) {
            Double d = Double.valueOf(jSpinner1.getValue().toString());
            map.getRenderingStrategy().setRotation(d);
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    public void refresh() {
        repaint();
        revalidate();
    }

    public void setMap2D(Map2D map) {
        this.map = map;
    }

    public Map2D getMap2D() {
        return map;
    }

    public JComponent geComponent() {
        return this;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
