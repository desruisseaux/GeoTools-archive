/*
 *    GeoTools - OpenSource mapping toolkit
 *    http://geotools.org
 *    (C) 2002-2007, GeoTools Project Managment Committee (PMC)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

package org.geotools.gui.swing.propertyedit;

import java.awt.Component;
import javax.swing.ImageIcon;
import org.geotools.gui.swing.propertyedit.PropertyPanel;
import org.geotools.map.MapContext;



/**
 *
 * @author  johann sorel
 */
public class ContextCRSPropertyPanel extends javax.swing.JPanel implements PropertyPanel {
    
    private MapContext context;
    
    /** Creates new form DefaultMapContextCRSEditPanel */
    public ContextCRSPropertyPanel() {
        initComponents();
        
//        try {            
//            combo = new AuthorityCodesComboBox();
//        } catch (FactoryRegistryException ex) {
//            ex.printStackTrace();
//        } catch (FactoryException ex) {
//            ex.printStackTrace();
//        }
//        
//        setLayout(new FlowLayout());
//        
//        add( combo );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 385, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void setTarget(Object target) {
        context = (MapContext) target;
        init();
    }

    public void apply() {
//        try {
//            context.setCoordinateReferenceSystem(CRS.decode("EPSG"+combo.getSelectedCode()));
//        } catch (NoSuchAuthorityCodeException ex) {
//            ex.printStackTrace();
//        } catch (TransformException ex) {
//            ex.printStackTrace();
//        } catch (FactoryException ex) {
//            ex.printStackTrace();
//        }
    }

    public String getTitle() {
        return "CRS";
    }

    public ImageIcon getIcon() {
        return null;
        //return  new ImageIcon(DefaultMapContextCRSEditPanel.class.getResource("/data/icone/icon_planete.png"));
    }

    public String getToolTip() {
        return "Projection";
    }

    public Component getPanel() {
        return this;
    }

    private void init() {
        //combo.filter(context.getCoordinateReferenceSystem().getName().getCodeSpace());
        //jtf_epsg.setText(context.getCoordinateReferenceSystem().getName().getCode());
    }

    public void revert() {
    }
    
}
