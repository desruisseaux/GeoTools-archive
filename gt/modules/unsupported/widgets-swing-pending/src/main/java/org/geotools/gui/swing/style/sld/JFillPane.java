/*
 *    GeoTools - OpenSource mapping toolkit
 *    http://geotools.org
 *    (C) 2002-2007, GeoTools Project Managment Committee (PMC)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

package org.geotools.gui.swing.style.sld;

import org.geotools.map.MapLayer;
import org.geotools.styling.Fill;
import org.geotools.styling.StyleBuilder;

/**
 * @author  johann sorel
 */
public class JFillPane extends javax.swing.JPanel {

    
    /** 
     * Creates new form JFillPanel 
     */
    public JFillPane() {
        initComponents();
        
        guiColor.setType(JExpressionPane.EXP_TYPE.COLOR);
        guiAlpha.setType(JExpressionPane.EXP_TYPE.OPACITY);                
    }

    /**
     * 
     * @param layer the layer style to edit
     */
    public void setLayer(MapLayer layer){
        guiColor.setLayer(layer);
        guiAlpha.setLayer(layer);
    }
    
    /**
     * 
     * @param fill The fill to edit
     */
    public void parseFill(Fill fill) {
        if (fill != null) {
            // TODO : not yet implemented
            //fill.getBackgroundColor();
            //fill.getGraphicFill();
            guiColor.setExpression(fill.getColor());
            guiAlpha.setExpression(fill.getOpacity());
            //Graphic graph = fill.getGraphicFill();
            //graph.
        }
    }

    /**
     * 
     * @return Fill : new Fill
     */
    public Fill getFill() {
        StyleBuilder sb = new StyleBuilder();
        return sb.createFill(guiColor.getExpression(), guiAlpha.getExpression());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guiAlpha = new org.geotools.gui.swing.style.sld.JExpressionPane();
        lbl2 = new javax.swing.JLabel();
        lbl_color1 = new javax.swing.JLabel();
        guiColor = new org.geotools.gui.swing.style.sld.JExpressionPane();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/geotools/gui/swing/style/sld/Bundle"); // NOI18N
        lbl2.setText(bundle.getString("opacity")); // NOI18N

        lbl_color1.setText(bundle.getString("color")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(lbl2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiAlpha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(lbl_color1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiColor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(lbl_color1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(guiColor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(lbl2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(guiAlpha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.geotools.gui.swing.style.sld.JExpressionPane guiAlpha;
    private org.geotools.gui.swing.style.sld.JExpressionPane guiColor;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl_color1;
    // End of variables declaration//GEN-END:variables
}