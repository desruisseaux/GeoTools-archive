<!-- Top Level, a description with the chapter TOC -->

    <para>
      This chapter describes, first, how to obtain the library and the 
      tools required to be able to use the Geotools library and, second, 
      how to use these libraries to display a map on screen with an 
      exceedingly primitive application. 
    </para>

    <para>
      The chapter assumes that the programmer understands the following:
      <itemizedlist>
        <listitem>
          <para>
          The Java (tm) Programming Language
          </para>
        </listitem>
        <listitem>
          <para>
            The basics of Geographic Information Systems 
          </para>
        </listitem>
      </itemizedlist>
      This chapter tries not to assume any other specialized knowledge; 
      the examples therefore start from the basic desktop of modern GUI 
      operating systems either of the UNIX heritage, namely GNU based or 
      MacOS X, or from the CPM heritage, namely Windows (tm). Since each
      programmer uses her own tools to actually develop her programs, each 
      will have to adapt these examples to fit her own needs.
    </para>

<sect1 id="sect-quick-start-getGt">
    <title>Get Geotools</title>

    <para>
      Geotools is distributed in three separate pieces: as a binary 
      distribution, as a source distribution, and as a javadoc collection. 
      Each of these can be obtained from the project website.
    </para>

</sect1>

<sect1 id="sect-quick-start-configJava">
    <title>Configure Java</title>

    <para>
      Geotools requires a Java VM and two imaging libraries, the 
      Java Advanced Imaging library and the Java Image I/O library. These 
      must all be configured correctly for the examples which follow.
    </para>

</sect1>


<sect1 id="sect-quick-start-runDemo">
    <title>Run the Demo</title>

    <para>
      Geotools contains a handy demonstration application which is useful
      both to ensure that the libraries are properly installed and to get 
      programmers started exploring each of the different areas of the 
      library.
    </para>

    <para>
      Once the Java libraries have been configured, a simple demonstration
      program can be run with the following command:
      <literallayout>
java -jar /path/to/gt2-demo-introduction-VERSION_NUMBER.jar org.geotools.demo.introduction.QuickStartGUI
      </literallayout>
      where "path/to/" is altered to point to the installation directory of the
      JAR files and "VERSION_NUMBER" is the number of the &lib; release.
    </para>

    <para>
      This command will lead to the following window:
    <!-- SYNC WITH WELCOME -->
    <figure id="fig-geotools-demo-REDUX">
      <title>The Geotools Demo showing an unprojected map of the world.</title>
      <screenshot>
        <mediaobject>
        <imageobject>
          <imagedata fileref="figures/geotools-demo.png" 
                     format="PNG" 
                     width="600px"
                     scalefit="1"
                     />
        </imageobject>
        <textobject>
          <phrase>
            A screenshot of the user demo.
          </phrase>
        </textobject>
	<caption>
	  <para>
	    The &lib; demonstration application uses swing components, such 
            as a label, buttons, and a text area, but also uses the JMapPane
            component to display geospatial data and provide a simple toolbar 
            with tools to manipulate those data.
	  </para>
	</caption>
        </mediaobject>
      </screenshot>
    </figure>
      The demo consists of a series of buttons on the left. Each button 
      performs a separate action as summarized below. Each button becomes 
      active when the previous button has been pressed.
    </para>

    <para>
      <itemizedlist>
        <listitem>
          <para>
            Create: Make FeatureSources from scratch, shapefile, or web servers.
          </para>
        </listitem>
        <listitem>
          <para>
            Style: Create styles for the features.
          </para>
        </listitem>
        <listitem>
          <para>
            Render: Display a map of styled features.
          </para>
        </listitem>
        <listitem>
          <para>
            Project: Redraw the map using a Mercator projection.
          </para>
        </listitem>
        <listitem>
          <para>
            Filter: Select a set of Features based on criteria.
          </para>
        </listitem>
        <listitem>
          <para>
            Capture: Create an image file copy of the rendered map.
          </para>
        </listitem>
        <listitem>
          <para>
            Save: Save the features in a FeatureSource to a file.
          </para>
        </listitem>
        <listitem>
          <para>
            Commit: Save the features in a FeatureSource to a web server.
          </para>
        </listitem>
        <listitem>
          <para>
            Analyze: An example of an advanced analysis.
          </para>
        </listitem>
      </itemizedlist>
    </para>


</sect1>


<sect1 id="sect-quick-start-readDeom">
  <title>Read the Demo</title>

  <para>
    The source code for the Demo application provides a quick introduction 
    to each of the major modules of the code library. The source walks 
    through the process of creating Features, both programatically and from 
    various sources such as shapefile and web servers. The source then
    discusses how to create styles and display a map. The source continues 
    by discussing advanced features of the &lib; library.
  </para>

  <para>
    The source is contained in the
      <filename>org.geotools.demo.introduction.QuickStartGUI.java</filename>
      source file within the 
      <filename>gt2-demo-introduction-VERSION.jar</filename>
      JAR file (where VERSION is replaced by the current version number).
  </para>

  <note>
    <title>The code is static and sequential</title>
    <para>
      The code in the &lib; Demo is created for legibility not for elegant 
      design. All methods are static, as are most variables, and the class
      itself is never instantiated. The idea is to have each button linked
      to one or more self-contained methods, each of which is then discussed 
      below.
    </para>
  </note>

  <sect2 id="sect-quick-start-readDemo-create">
    <title>Create FeatureSources</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-style">
    <title>Style the features</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-render">
    <title>Render a map</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-project">
    <title>Project the map</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-filter">
    <title>Filter</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-capture">
    <title>Capture an image</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-save">
    <title>Save to a file</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-commit">
    <title>Commit to a server</title>

    <para>
    </para>

  </sect2>


  <sect2 id="sect-quick-start-readDemo-analyze">
    <title>Advanced Analysis</title>

    <para>
      An example of advanced analysis.
    </para>

  </sect2>


</sect1>









